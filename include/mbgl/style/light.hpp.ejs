<%
  const properties = locals.properties;
-%>
// This file is generated. Do not edit.

#pragma once

#include <mbgl/style/light_properties.hpp>

namespace mbgl {

class RenderLight;

namespace style {

class LightObserver;

class Light {
public:

    void setObserver(LightObserver* observer);

<% for (const property of properties) { -%>
    static <%- evaluatedType(property) %> getDefault<%- camelize(property.name) %>();
    <%- propertyValueType(property) %> get<%- camelize(property.name) %>() const;
    void set<%- camelize(property.name) %>(<%- propertyValueType(property) %>);
    void set<%- camelize(property.name) %>Transition(const TransitionOptions&);
    TransitionOptions get<%- camelize(property.name) %>Transition() const;

<% } -%>
private:
    IndexedTuple<LightProperties, LightProperties> properties;
    LightObserver* observer = nullptr;

    friend class mbgl::RenderLight;
};

} // namespace style
} // namespace mbgl
